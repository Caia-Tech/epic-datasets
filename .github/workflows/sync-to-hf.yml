name: Sync to Hugging Face

on:
  push:
    branches: [master, main]
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dataset: [go-epic, caia-math, caia-system-design, cicd-epic, python-epic, rust-epic]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
      
      - name: Debug - Check files
        run: |
          echo "=== Debugging workflow for ${{ matrix.dataset }} ==="
          pwd
          ls -la
          echo "Checking for dataset file:"
          ls -la "${{ matrix.dataset }}/${{ matrix.dataset }}.jsonl" || echo "FILE NOT FOUND!"
          echo "LICENSE file:"
          ls -la LICENSE || echo "LICENSE NOT FOUND!"
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install huggingface-hub
        run: pip install huggingface-hub
      
      - name: Check HF_TOKEN
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          if [ -z "$HF_TOKEN" ]; then
            echo "ERROR: HF_TOKEN secret is not set!"
            exit 1
          else
            echo "HF_TOKEN is set (length: ${#HF_TOKEN})"
          fi
      
      - name: Create HF repository
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          python3 -c "
import os
from huggingface_hub import HfApi

print('Creating repository for ${{ matrix.dataset }}')
api = HfApi()
try:
    result = api.create_repo(
        repo_id='CaiaTech/${{ matrix.dataset }}',
        token=os.environ['HF_TOKEN'],
        repo_type='dataset',
        exist_ok=True
    )
    print(f'Repository created or already exists: {result}')
except Exception as e:
    print(f'Error creating repository: {e}')
    import traceback
    traceback.print_exc()
    exit(1)
"
      
      - name: Push to Hugging Face
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          echo "=== Starting push process for ${{ matrix.dataset }} ==="
          mkdir -p /tmp/hf-dataset
          
          # Copy dataset file
          if [ -f "${{ matrix.dataset }}/${{ matrix.dataset }}.jsonl" ]; then
            echo "Copying ${{ matrix.dataset }}.jsonl"
            cp "${{ matrix.dataset }}/${{ matrix.dataset }}.jsonl" /tmp/hf-dataset/
            ls -la /tmp/hf-dataset/
          else
            echo "ERROR: Dataset file ${{ matrix.dataset }}/${{ matrix.dataset }}.jsonl not found"
            ls -la "${{ matrix.dataset }}/"
            exit 1
          fi
          
          # Copy LICENSE
          if [ -f "LICENSE" ]; then
            cp LICENSE /tmp/hf-dataset/
          else
            echo "WARNING: LICENSE file not found"
          fi
          
          # Setup git repo
          cd /tmp/hf-dataset
          git init -b main
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          
          # Setup Git LFS
          git lfs install
          git lfs track "*.parquet"
          git lfs track "*.jsonl"
          git add .gitattributes
          
          # Add and commit files
          git add .
          git status
          git commit -m "Sync from GitHub: ${{ github.sha }}"
          
          # Push to Hugging Face
          echo "Pushing to HuggingFace repository CaiaTech/${{ matrix.dataset }}"
          git remote add hf https://CaiaTech:$HF_TOKEN@huggingface.co/datasets/CaiaTech/${{ matrix.dataset }}
          git push hf main --force
